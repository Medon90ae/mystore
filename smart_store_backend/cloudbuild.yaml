
steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}', '.']
    dir: 'smart_store_backend'

  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '--region'
      - '${_REGION}'
      - '--service-account'
      - 'smart-store-sa@${PROJECT_ID}.iam.gserviceaccount.com'
      - '--allow-unauthenticated' # Or use --no-allow-unauthenticated and set up IAP/Firebase Auth
      - '--set-env-vars'
      - 'GCP_PROJECT_ID=${PROJECT_ID},GCS_BUCKET_NAME=${_GCS_BUCKET_NAME},GCP_REGION=${_REGION},VERTEX_MODEL_SECRET_NAME=${_VERTEX_MODEL_SECRET_NAME},PUBSUB_TOPIC_ID=${_PUBSUB_TOPIC_ID}'

images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'

substitutions:
  _SERVICE_NAME: 'smart-store-backend'
  _REPO_NAME: 'smart-store-repo' # Your Artifact Registry repo name
  _REGION: 'europe-west3'
  _GCS_BUCKET_NAME: 'smart-store-uploads-${PROJECT_ID}' # Example bucket name
  _VERTEX_MODEL_SECRET_NAME: 'vertex-model-id'
  _PUBSUB_TOPIC_ID: 'xlsx-processing-topic'

options:
  logging: CLOUD_LOGGING_ONLY
